<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">
    <xctk:InverseBoolConverter x:Key="InverseBoolConverter" />
    
    <SolidColorBrush x:Key="ButtonNormalBorder"
                     Color="#FF707070" />
    
    <Style x:Key="ComboBoxToggleButton"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="Padding"
                Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <xctk:ButtonChrome x:Name="Chrome"
                                       BorderBrush="{TemplateBinding BorderBrush}"
                                       Background="{TemplateBinding Background}"
                                       CornerRadius="0"
                                       RenderEnabled="{TemplateBinding IsEnabled}"
                                       RenderMouseOver="{Binding IsMouseOver, ElementName=PART_DropDownButton}"
                                       RenderNormal="False"
                                       RenderPressed="{Binding IsPressed, ElementName=PART_DropDownButton}"
                                       SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="BackgroundBorder" Background="Gray"
                                    Grid.ColumnSpan="2" />
                            <!--  Following borders represent inner shadow  -->
                            <Border x:Name="templateRoot" Background="Transparent" Grid.Column="0" Grid.ColumnSpan="2"
                                    BorderBrush="Pink"
                                    BorderThickness="1" ClipToBounds="True" CornerRadius="0"
                                    SnapsToDevicePixels="True">
                                <Border Margin="-4,-4,0,0"
                                        BorderBrush="Pink"
                                        BorderThickness="3,3,0,0" CornerRadius="0"
                                        SnapsToDevicePixels="True" />
                            </Border>

                            <ContentPresenter x:Name="TextBox" Grid.Column="0"
                                              Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                              Focusable="False"
                                              Cursor="Arrow"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                            <Border x:Name="splitBorder" Grid.Column="1"
                                    Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                    HorizontalAlignment="Right"
                                    Background="Pink"
                                    BorderBrush="Transparent" SnapsToDevicePixels="True">
                                <Path x:Name="Arrow" Margin="0" HorizontalAlignment="Center"
                                      VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"
                                      Fill="White" />
                            </Border>

                            <Border Grid.Column="0" x:Name="OpenedBorder" Background="Transparent"
                                    BorderBrush="Transparent" BorderThickness="1,1,0,1" IsHitTestVisible="False" />
                        </Grid>
                    </xctk:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="RenderPressed"
                                    TargetName="Chrome"
                                    Value="true" />

                            <Setter TargetName="OpenedBorder" Property="BorderBrush"
                                    Value="Pink" />
                            <Setter TargetName="splitBorder" Property="Background"
                                    Value="Pink" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Fill"
                                    TargetName="Arrow"
                                    Value="#AFAFAF" />

                            <Setter TargetName="splitBorder" Property="Background"
                                    Value="Pink" />
                            <Setter TargetName="splitBorder" Property="BorderBrush"
                                    Value="Pink" />
                            <Setter Property="Foreground" Value="Pink" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="OpenedBorder" Property="BorderBrush"
                                    Value="Pink" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type xctk:CheckComboBox}">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ButtonNormalBorder}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="Padding"
                Value="2" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xctk:CheckComboBox}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="MainGrid"
                          SnapsToDevicePixels="true">
                            <Popup x:Name="PART_Popup"
                               AllowsTransparency="true"
                               IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                               StaysOpen="False"
                               Margin="1"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                               Placement="Bottom">
                                <Grid MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                                    <Border x:Name="DropDownBorder"
                                        MaxHeight="{Binding MaxDropDownHeight,  RelativeSource={RelativeSource TemplatedParent}}"
                                        BorderBrush="Pink"
                                        BorderThickness="1"
                                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas HorizontalAlignment="Left"
                                                    Height="0"
                                                    VerticalAlignment="Top"
                                                    Width="0">
                                                    <Rectangle x:Name="OpaqueRect"
                                                           Fill="{Binding Background, ElementName=DropDownBorder}"
                                                           Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                           Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                                                </Canvas>
                                                <ItemsPresenter x:Name="PART_ItemsPresenter"
                                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>


                            <ToggleButton x:Name="PART_DropDownButton"
                                          Content="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          Background="{TemplateBinding Background}"
                                          Focusable="False"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Padding="{TemplateBinding Padding}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Style="{StaticResource ComboBoxToggleButton}"
                                          IsHitTestVisible="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}" />

                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
